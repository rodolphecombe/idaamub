#define loi_ABILITIES_EVENTS
	[event]
	name=attacker_hits
	first_time_only=no

	[filter_attack]
		special_id=zone damage
	[/filter_attack]
	{VARIABLE has_poison no}
	[if]
		[variable]
			name=weapon.specials.poison.id
			equals=poison
		[/variable]
		[then]
			{VARIABLE has_poison yes}
		[/then]
	[/if]
	{INCORPORATE_EFFECTS}
	[harm_unit_loti]
		[filter]
			[filter_adjacent]
				x,y=$x1,$y1
			[/filter_adjacent]
			[filter_side]
				[enemy_of]
					side=$unit.side
				[/enemy_of]
			[/filter_side]
		[/filter]
		amount=$damage
		damage_type=$weapon.type
		fire_event=yes
		poisoned=$has_poison
	[/harm_unit_loti]
	[if]
		[variable]
			name=damage
			greater_than=24 # If the damage is high enough, the range is increased.
		[/variable]
		[then]
			[harm_unit_loti]
				[filter]
					[filter_location]
						# Exclude the units that just received the damage.
						[not]
							x,y=$x1,$y1
							radius=1
						[/not]
						# Include the remaining units within two hexes.
						[and]
							x,y=$x1,$y1
							radius=2
							# The blaze cannot go through walls.
							[filter_radius]
								terrain=!,X*,X*^*,*^X*
							[/filter_radius]
						[/and]
					[/filter_location]
					[filter_side]
						[enemy_of]
							side=$unit.side
						[/enemy_of]
					[/filter_side]
				[/filter]
				amount=$($($damage*3)/4-4)
				damage_type=$weapon.type
				fire_event=yes
				animate=no
				poisoned=$has_poison
			[/harm_unit_loti]
		[/then]
	[/if]
	[if]
		[variable]
			name=damage
			greater_than=48     # If the damage is extremely high, the range is increased even more.
		[/variable]
		[then]
			[harm_unit_loti]
				[filter]
					[filter_location]
						# Exclude the units that just received the damage.
						[not]
							x,y=$x1,$y1
							radius=2
						[/not]
						# Include the remaining units within two hexes.
						[and]
							x,y=$x1,$y1
							radius=3
							# The blaze cannot go through walls.
							[filter_radius]
								terrain=!,X*,X*^*,*^X*
							[/filter_radius]
						[/and]
					[/filter_location]
					[filter_side]
						[enemy_of]
							side=$unit.side
						[/enemy_of]
					[/filter_side]
				[/filter]
				amount=$($($damage*3)/4-18)
				damage_type=$weapon.type
				fire_event=yes
				animate=no
				poisoned=$has_poison
			[/harm_unit_loti]
		[/then]
	[/if]
	[if]
		[variable]
			name=damage
			greater_than=108        # If the damage is higher than most common attacks can get, the range is increased even even more.
		[/variable]
		[then]
			[harm_unit_loti]
				[filter]
					[filter_location]
						# Exclude the units that just received the damage.
						[not]
							x,y=$x1,$y1
							radius=3
						[/not]
						# Include the remaining units within two hexes.
						[and]
							x,y=$x1,$y1
							radius=4
							# The blaze cannot go through walls.
							[filter_radius]
								terrain=!,X*,X*^*,*^X*
							[/filter_radius]
						[/and]
					[/filter_location]
					[filter_side]
						[enemy_of]
							side=$unit.side
						[/enemy_of]
					[/filter_side]
				[/filter]
				amount=$($($damage)/2-24)
				damage_type=$weapon.
				fire_event=yes
				animate=no
				poisoned=$has_poison
			[/harm_unit_loti]
		[/then]
	[/if]
	{CLEAR_VARIABLE damage,has_poison}
[/event]

[event]
	name=attack end
	first_time_only=no
	[filter_attack]
		special_id=zone damage
	[/filter_attack]
	[fire_event]
		name=dooming lethargy
		[primary_unit]
			find_in=unit
		[/primary_unit]
	[/fire_event]
[/event]

[event]
	name=die
	first_time_only=no
	[filter_second_attack]
		special_id=cold plague loi
	[/filter_second_attack]
	[kill]
		id=$unit.id
		animate=yes
		fire_event=yes
	[/kill]
	[if]
		[variable]
			name=unit.usage
			equals=archer
		[/variable]
		[then]
			[unit]
				type=Ice Bowman LoI
				x=$x1
				y=$y1
			[/unit]
		[/then]
		[else]
			[unit]
				type=Ice Swordsman LoI
				x=$x1
				y=$y1
			[/unit]
		[/else]
	[/if]
[/event]

[event]
	name=enter_hex
	first_time_only=no
	[filter]
		[filter_adjacent]
			[filter_side]
				[enemy_of]
					side=$unit.side
				[/enemy_of]
			[/filter_side]
			ability=frightening_loi
		[/filter_adjacent]
		[not]
			race=undead
		[/not]
	[/filter]
	[store_reachable_locations]
		[filter]
			id=$unit.id
		[/filter]
		moves=max
		[filter_location]
			[not]
				[filter]
				[/filter]
			[/not]
			[not]
				x,y=$x1,$y1
			[/not]
			[not]
				[filter_adjacent_location]
					[filter]
						[filter_side]
							[enemy_of]
								side=$unit.side
							[/enemy_of]
						[/filter_side]
						ability=frightening_loi
					[/filter]
				[/filter_adjacent_location]
			[/not]
			[and]
				x,y=$x1,$y1
				radius=1
			[/and]
		[/filter_location]
		variable=possible_locations
	[/store_reachable_locations]
	[if]
		[variable]
			name=possible_locations.length
			greater_than=0
		[/variable]
		[then]
			{MOVE_UNIT id=$unit.id $possible_locations[0].x $possible_locations[0].y}
		[/then]
	[/if]
	{CLEAR_VARIABLE possible_locations}
[/event]

[event]
	name=enter_hex
	first_time_only=no
	[filter]
		ability=frightening_loi
		side=$side_number
	[/filter]
	[store_unit]
		[filter]
			[filter_side]
				[enemy_of]
					side=$unit.side
				[/enemy_of]
			[/filter_side]
			[filter_adjacent]
				id=$unit.id
			[/filter_adjacent]
			[not]
				race=undead
			[/not]
			#exclude the leaders
			[not]
				canrecruit=yes
			[/not]
		[/filter]
		variable=units_to_move
	[/store_unit]
	[foreach]
		array=units_to_move
		[do]
			[store_reachable_locations]
				[filter]
					id=$this_item.id
				[/filter]
				moves=max
				[filter_location]
					[not]
						[filter]
						[/filter]
					[/not]
					[not]
						x,y=$this_item.x,$this_item.y
					[/not]
					[not]
						[filter_adjacent_location]
							[filter]
								[filter_side]
									[enemy_of]
										side=$this_item.side
									[/enemy_of]
								[/filter_side]
								ability=frightening_loi
							[/filter]
						[/filter_adjacent_location]
					[/not]
					[and]
						x,y=$this_item.x,$this_item.y
						radius=1
					[/and]
				[/filter_location]
				variable=possible_locations
			[/store_reachable_locations]
			[if]
				[variable]
					name=possible_locations.length
					greater_than=0
				[/variable]
				[then]
					{MOVE_UNIT id=$this_item.id $possible_locations[0].x $possible_locations[0].y}
				[/then]
			[/if]
			{CLEAR_VARIABLE possible_locations}
		[/do]
	[/foreach]
	{CLEAR_VARIABLE units_to_move}
[/event]

[event]
	name=turn refresh
	first_time_only=no
	[store_unit]
		[filter]
			[filter_adjacent]
				[filter_side]
					[enemy_of]
						side=$side_number
					[/enemy_of]
				[/filter_side]
				ability=immobilisation_loi
				is_enemy=yes
			[/filter_adjacent]
			side=$side_number
		[/filter]
		kill=no
		variable=immobilised
	[/store_unit]
	[foreach]
		array=immobilised
		[do]
			{VARIABLE this_item.moves 0}
			[unstore_unit]
				variable=this_item
				find_vacant=no
				male_text=_"Immobilised"
				female_text=_"female^Immobilised"
			[/unstore_unit]
		[/do]
	[/foreach]
	{CLEAR_VARIABLE immobilised}
[/event]

[event]
	name=turn refresh
	first_time_only=no
	[store_unit]
		[filter]
			ability=incantation_of_experience_loi
		[/filter]
		kill=no
		variable=incanter
	[/store_unit]
	[foreach]
		array=incanter
		[do]
			{VARIABLE_OP this_item.hitpoints add -2}
			{VARIABLE_OP this_item.experience add 2}
			[unstore_unit]
				variable=this_item
				find_vacant=no
				male_text=_"Incanter"
				female_text=_"female^Incanter"
			[/unstore_unit]
		[/do]
	[/foreach]
	{CLEAR_VARIABLE incanter}
[/event]

[event]
	name=die
	first_time_only=no
	[filter]
		[not]
			side=1
		[/not]
	[/filter]
	[if]
		[have_unit]
			side=1
			ability=bombmaster_loi
			[filter_location]
				x,y=$x1,$y1
				radius=5
			[/filter_location]
		[/have_unit]

		[then]
			[sound]
				name=dragonstick.ogg
			[/sound]
			[harm_unit]
				[filter]
					formula="self.hitpoints>0"
					[filter_adjacent]
						x,y=$x1,$y1
					[/filter_adjacent]
					[not]
						side=1
					[/not]
				[/filter]
				[filter_second]
					side=1
					ability=bombmaster_loi
					[filter_location]
						x,y=$x1,$y1
						radius=5
					[/filter_location]
				[/filter_second]
				amount=16
				damage_type=fire
				fire_event=no
				animate=yes
				kill=yes
			[/harm_unit]
			[harm_unit]
				[filter]
					formula="self.hitpoints>0"
					[filter_location]
						# Exclude the units that just received the damage.
						[not]
							x,y=$x1,$y1
							radius=1
						[/not]
						# Include the remaining units within two hexes.
						[and]
							x,y=$x1,$y1
							radius=2
							# The blaze cannot go through walls.
							[filter_radius]
								terrain=!,X*,X*^*,*^X*
							[/filter_radius]
						[/and]
					[/filter_location]
					[not]
						side=1
					[/not]
				[/filter]
				[filter_second]
					side=1
					ability=bombmaster_loi
					[filter_location]
						x,y=$x1,$y1
						radius=5
					[/filter_location]
				[/filter_second]
				amount=8
				animate=yes
				damage_type=fire
				fire_event=no
				kill=yes
			[/harm_unit]
		[/then]
	[/if]
[/event]

[event]
	name=attacker hits
	first_time_only=no

	[filter_second]
		ability=experience_shield_loi
	[/filter_second]
	[if]
		[variable]
			name=second_unit.experience
			greater_than_equal_to=$damage_inflicted
		[/variable]
		[then]
			[heal_unit]
				animate=yes
				[filter]
					x,y=$x2,$y2
				[/filter]
				amount=$damage_inflicted
				restore_statuses=no
			[/heal_unit]
			{VARIABLE_OP second_unit.experience sub $damage_inflicted}
			[unstore_unit]
				variable=second_unit
				find_vacant=no
			[/unstore_unit]
		[/then]
		[else]
			[heal_unit]
				animate=yes
				[filter]
					x,y=$x2,$y2
				[/filter]
				amount=$second_unit.experience
				restore_statuses=no
			[/heal_unit]
			{VARIABLE second_unit.experience 0}
			[unstore_unit]
				variable=second_unit
				find_vacant=no
			[/unstore_unit]
		[/else]
	[/if]
[/event]
[event]
	name=defender hits
	first_time_only=no

	[filter]
		ability=experience_shield_loi
	[/filter]
	[if]
		[variable]
			name=unit.experience
			greater_than_equal_to=$damage_inflicted
		[/variable]
		[then]
			[heal_unit]
				animate=no
				[filter]
					x,y=$x1,$y1
				[/filter]
				amount=$damage_inflicted
				restore_statuses=no
			[/heal_unit]
			{VARIABLE_OP unit.experience sub $damage_inflicted}
			[unstore_unit]
				variable=unit
				find_vacant=no
			[/unstore_unit]
		[/then]
		[else]
			[heal_unit]
				animate=yes
				[filter]
					x,y=$x2,$y2
				[/filter]
				amount=$unit.experience
				restore_statuses=no
			[/heal_unit]
			{VARIABLE unit.experience 0}
			[unstore_unit]
				variable=unit
				find_vacant=no
			[/unstore_unit]
		[/else]
	[/if]
[/event]
#enddef